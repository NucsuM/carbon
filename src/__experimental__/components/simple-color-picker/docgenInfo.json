{
  "src/__experimental__/components/simple-color-picker/color-sample-box/color-sample-box.component.js": [
    {
      "description": "",
      "displayName": "ColorSampleBox",
      "methods": [],
      "props": {
        "checked": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "color": {
          "type": {
            "name": "custom",
            "raw": "colorSampleBoxCheck"
          },
          "required": false,
          "description": ""
        }
      }
    }
  ],
  "src/__experimental__/components/simple-color-picker/simple-color/simple-color.component.js": [
    {
      "description": "",
      "displayName": "SimpleColor",
      "methods": [],
      "props": {
        "value": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "the value of the color that is represented by this SimpleColor"
        },
        "name": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "the input name"
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "called when the user selects or deselects this color option",
          "defaultValue": {
            "value": "null",
            "computed": false
          }
        },
        "onBlur": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        },
        "onMouseDown": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        },
        "checked": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "determines if this color option is selected or unselected",
          "defaultValue": {
            "value": "false",
            "computed": false
          }
        },
        "className": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "[Legacy] Custom classname"
        }
      }
    }
  ],
  "src/__experimental__/components/simple-color-picker/simple-color-picker.component.js": [
    {
      "description": "",
      "displayName": "SimpleColorPicker",
      "methods": [],
      "props": {
        "children": {
          "type": {
            "name": "custom",
            "raw": "(props, propName, componentName) => {\n  let error;\n  const prop = props[propName];\n\n  React.Children.forEach(prop, (child) => {\n    if (SimpleColor.displayName !== child.type.displayName) {\n      error = new Error(`\\`${componentName}\\` only accepts children of type \\`${SimpleColor.displayName}\\`.`);\n    }\n  });\n\n  return error;\n}"
          },
          "required": false,
          "description": "The SimpleColor components to be rendered in the group"
        },
        "isBlurBlocked": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Should the onBlur callback prop be initially blocked?"
        },
        "error": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate that error has occurred\n  Pass string to display icon, tooltip and red border\n  Pass true boolean to only display red border"
        },
        "warning": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate that warning has occurred\n  Pass string to display icon, tooltip and orange border\n  Pass true boolean to only display orange border"
        },
        "info": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate additional information\n  Pass string to display icon, tooltip and blue border\n  Pass true boolean to only display blue border"
        },
        "validationOnLegend": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "When true, validation icon will be placed on legend instead of being placed by the input"
        },
        "legend": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The content for the RadioGroup Legend"
        },
        "value": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The currently selected color."
        },
        "name": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The name to apply to the input."
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "A callback triggered when a color is selected."
        },
        "onBlur": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "A callback triggered when a color is selected."
        },
        "onKeyDown": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "A callback triggered on key down."
        },
        "maxWidth": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "prop that sets max-width in css"
        },
        "childWidth": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "prop that represents childWidth"
        },
        "required": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Flag to configure component as mandatory"
        }
      }
    }
  ],
  "src/__experimental__/components/simple-color-picker/simple-color-picker.stories.js": [
    {
      "description": "",
      "displayName": "Component",
      "methods": []
    },
    {
      "description": "",
      "displayName": "Required",
      "methods": []
    }
  ]
}